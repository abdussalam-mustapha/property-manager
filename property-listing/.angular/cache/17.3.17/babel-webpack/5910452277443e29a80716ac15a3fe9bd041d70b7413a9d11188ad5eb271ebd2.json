{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./local-storage.service\";\nexport class AuthService {\n  constructor(localStorageService) {\n    this.localStorageService = localStorageService;\n    this.currentUserSubject = new BehaviorSubject(this.localStorageService.getItem('currentUser'));\n    this.currentUser = this.currentUserSubject.asObservable();\n  }\n  get currentUserValue() {\n    return this.currentUserSubject.value;\n  }\n  login(username, role) {\n    const user = {\n      id: Date.now().toString(),\n      username,\n      role\n    };\n    this.localStorageService.setItem('currentUser', user);\n    this.currentUserSubject.next(user);\n    return user;\n  }\n  logout() {\n    this.localStorageService.removeItem('currentUser');\n    this.currentUserSubject.next(null);\n  }\n  static {\n    this.ɵfac = function AuthService_Factory(t) {\n      return new (t || AuthService)(i0.ɵɵinject(i1.LocalStorageService));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthService,\n      factory: AuthService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["BehaviorSubject","AuthService","constructor","localStorageService","currentUserSubject","getItem","currentUser","asObservable","currentUserValue","value","login","username","role","user","id","Date","now","toString","setItem","next","logout","removeItem","i0","ɵɵinject","i1","LocalStorageService","factory","ɵfac","providedIn"],"sources":["C:\\Users\\DELL\\Desktop\\prop-palace-manager\\property-listing\\app\\services\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { User } from '../models/user.model';\nimport { LocalStorageService } from './local-storage.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private currentUserSubject: BehaviorSubject<User | null>;\n  public currentUser: Observable<User | null>;\n\n  constructor(private localStorageService: LocalStorageService) {\n    this.currentUserSubject = new BehaviorSubject<User | null>(this.localStorageService.getItem<User>('currentUser'));\n    this.currentUser = this.currentUserSubject.asObservable();\n  }\n\n  public get currentUserValue(): User | null {\n    return this.currentUserSubject.value;\n  }\n\n  login(username: string, role: 'Admin' | 'User'): User {\n    const user: User = { id: Date.now().toString(), username, role };\n    this.localStorageService.setItem('currentUser', user);\n    this.currentUserSubject.next(user);\n    return user;\n  }\n\n  logout(): void {\n    this.localStorageService.removeItem('currentUser');\n    this.currentUserSubject.next(null);\n  }\n}\n"],"mappings":"AACA,SAASA,eAAe,QAAoB,MAAM;;;AAOlD,OAAM,MAAOC,WAAW;EAItBC,YAAoBC,mBAAwC;IAAxC,KAAAA,mBAAmB,GAAnBA,mBAAmB;IACrC,IAAI,CAACC,kBAAkB,GAAG,IAAIJ,eAAe,CAAc,IAAI,CAACG,mBAAmB,CAACE,OAAO,CAAO,aAAa,CAAC,CAAC;IACjH,IAAI,CAACC,WAAW,GAAG,IAAI,CAACF,kBAAkB,CAACG,YAAY,EAAE;EAC3D;EAEA,IAAWC,gBAAgBA,CAAA;IACzB,OAAO,IAAI,CAACJ,kBAAkB,CAACK,KAAK;EACtC;EAEAC,KAAKA,CAACC,QAAgB,EAAEC,IAAsB;IAC5C,MAAMC,IAAI,GAAS;MAAEC,EAAE,EAAEC,IAAI,CAACC,GAAG,EAAE,CAACC,QAAQ,EAAE;MAAEN,QAAQ;MAAEC;IAAI,CAAE;IAChE,IAAI,CAACT,mBAAmB,CAACe,OAAO,CAAC,aAAa,EAAEL,IAAI,CAAC;IACrD,IAAI,CAACT,kBAAkB,CAACe,IAAI,CAACN,IAAI,CAAC;IAClC,OAAOA,IAAI;EACb;EAEAO,MAAMA,CAAA;IACJ,IAAI,CAACjB,mBAAmB,CAACkB,UAAU,CAAC,aAAa,CAAC;IAClD,IAAI,CAACjB,kBAAkB,CAACe,IAAI,CAAC,IAAI,CAAC;EACpC;;;uBAvBWlB,WAAW,EAAAqB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,mBAAA;IAAA;EAAA;;;aAAXxB,WAAW;MAAAyB,OAAA,EAAXzB,WAAW,CAAA0B,IAAA;MAAAC,UAAA,EAFV;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}