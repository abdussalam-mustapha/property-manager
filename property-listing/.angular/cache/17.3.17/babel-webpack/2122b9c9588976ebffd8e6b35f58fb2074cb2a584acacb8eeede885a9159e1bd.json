{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./local-storage.service\";\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    constructor(localStorageService) {\n      this.localStorageService = localStorageService;\n      this.currentUserSubject = new BehaviorSubject(this.localStorageService.getItem('currentUser'));\n      this.currentUser = this.currentUserSubject.asObservable();\n    }\n    get currentUserValue() {\n      return this.currentUserSubject.value;\n    }\n    login(username, role) {\n      const user = {\n        id: Date.now().toString(),\n        username,\n        role\n      };\n      this.localStorageService.setItem('currentUser', user);\n      this.currentUserSubject.next(user);\n      return user;\n    }\n    logout() {\n      this.localStorageService.removeItem('currentUser');\n      this.currentUserSubject.next(null);\n    }\n    static {\n      this.ɵfac = function AuthService_Factory(t) {\n        return new (t || AuthService)(i0.ɵɵinject(i1.LocalStorageService));\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: AuthService,\n        factory: AuthService.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}