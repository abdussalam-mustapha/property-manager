{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/auth.service\";\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor(authService) {\n      this.authService = authService;\n      this.closeDialog = new EventEmitter();\n    }\n    login(role) {\n      const username = role === 'Admin' ? 'Admin User' : 'Regular User';\n      this.authService.login(username, role);\n      this.closeDialog.emit(true);\n      // In a real app, you'd show a toast notification here.\n      console.log(`Logged in as ${role}`);\n    }\n    close() {\n      this.closeDialog.emit(false);\n    }\n    static {\n      this.ɵfac = function LoginComponent_Factory(t) {\n        return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.AuthService));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: LoginComponent,\n        selectors: [[\"app-login\"]],\n        outputs: {\n          closeDialog: \"closeDialog\"\n        },\n        standalone: true,\n        features: [i0.ɵɵStandaloneFeature],\n        decls: 18,\n        vars: 0,\n        consts: [[1, \"login-overlay\", 3, \"click\"], [1, \"login-dialog-container\"], [1, \"login-dialog\"], [1, \"dialog-header\"], [1, \"close-button\", 3, \"click\"], [1, \"dialog-body\"], [1, \"dialog-subheading\"], [1, \"button-group\"], [1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"btn\", \"btn-secondary\", 3, \"click\"], [1, \"dialog-footer-text\"]],\n        template: function LoginComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0);\n            i0.ɵɵlistener(\"click\", function LoginComponent_Template_div_click_0_listener() {\n              return ctx.close();\n            });\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"h3\");\n            i0.ɵɵtext(5, \"Login to Property Palace\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(6, \"button\", 4);\n            i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_6_listener() {\n              return ctx.close();\n            });\n            i0.ɵɵtext(7, \"\\u00D7\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(8, \"div\", 5)(9, \"p\", 6);\n            i0.ɵɵtext(10, \" For demonstration purposes, please select a role to log in. \");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(11, \"div\", 7)(12, \"button\", 8);\n            i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_12_listener() {\n              return ctx.login(\"Admin\");\n            });\n            i0.ɵɵtext(13, \" Login as Admin \");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(14, \"button\", 9);\n            i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_14_listener() {\n              return ctx.login(\"User\");\n            });\n            i0.ɵɵtext(15, \" Login as User \");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(16, \"p\", 10);\n            i0.ɵɵtext(17, \" Admin: Full CRUD access | User: Read-only access \");\n            i0.ɵɵelementEnd()()()();\n          }\n        },\n        dependencies: [CommonModule],\n        styles: [\".login-overlay[_ngcontent-%COMP%]{position:fixed;inset:0;background-color:#00000080;z-index:40}.login-dialog-container[_ngcontent-%COMP%]{position:fixed;inset:0;z-index:50;display:flex;align-items:center;justify-content:center}.login-dialog[_ngcontent-%COMP%]{background-color:var(--surface-color);border-radius:.5rem;box-shadow:0 10px 15px -3px #0000001a,0 4px 6px -4px #0000001a;padding:1.5rem;width:100%;max-width:28rem;margin:0 auto}.dialog-header[_ngcontent-%COMP%]{display:flex;justify-content:space-between;align-items:center;border-bottom:1px solid var(--border-color);padding-bottom:.75rem}.dialog-header[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%]{font-size:1.125rem;font-weight:600;margin:0}.close-button[_ngcontent-%COMP%]{color:var(--text-color-light);background:none;border:none;font-size:1.5rem;line-height:1;cursor:pointer}.close-button[_ngcontent-%COMP%]:hover{color:var(--text-color)}.dialog-body[_ngcontent-%COMP%]{padding-top:1rem}.dialog-subheading[_ngcontent-%COMP%]{font-size:.875rem;color:var(--text-color-light);margin-bottom:1rem;text-align:center}.button-group[_ngcontent-%COMP%]{display:grid;grid-template-columns:1fr 1fr;gap:1rem}.btn-secondary[_ngcontent-%COMP%]{background-color:var(--secondary-color);color:#fff;border:none}.btn-secondary[_ngcontent-%COMP%]:hover{background-color:#5a6268}.dialog-footer-text[_ngcontent-%COMP%]{font-size:.75rem;color:var(--text-color-light);margin-top:1rem;text-align:center}\"]\n      });\n    }\n  }\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}