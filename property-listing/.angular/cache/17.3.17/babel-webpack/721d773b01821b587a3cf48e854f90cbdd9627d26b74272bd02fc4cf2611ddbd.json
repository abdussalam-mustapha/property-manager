{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/auth.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"../login/login.component\";\nfunction HeaderComponent_ng_container_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"span\", 8);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function HeaderComponent_ng_container_6_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.logout());\n    });\n    i0.ɵɵtext(4, \" Logout \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const user_r3 = ctx.ngIf;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\"Welcome, \", user_r3.username, \" (\", user_r3.role, \")\");\n  }\n}\nfunction HeaderComponent_ng_template_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function HeaderComponent_ng_template_8_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.openLogin());\n    });\n    i0.ɵɵtext(1, \" Login \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction HeaderComponent_app_login_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"app-login\", 11);\n    i0.ɵɵlistener(\"closeDialog\", function HeaderComponent_app_login_10_Template_app_login_closeDialog_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onLoginDialogClose($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n}\nexport class HeaderComponent {\n  constructor(authService) {\n    this.authService = authService;\n    this.isLoginOpen = false;\n    this.currentUser$ = this.authService.currentUser;\n  }\n  ngOnInit() {}\n  logout() {\n    this.authService.logout();\n    // In a real app, you'd show a toast notification here.\n    console.log('Logged out');\n  }\n  openLogin() {\n    this.isLoginOpen = true;\n  }\n  onLoginDialogClose(loggedIn) {\n    this.isLoginOpen = false;\n    if (loggedIn) {\n      // In a real app, you'd show a toast notification here.\n      console.log('Logged in');\n    }\n  }\n  static {\n    this.ɵfac = function HeaderComponent_Factory(t) {\n      return new (t || HeaderComponent)(i0.ɵɵdirectiveInject(i1.AuthService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: HeaderComponent,\n      selectors: [[\"app-header\"]],\n      decls: 11,\n      vars: 5,\n      consts: [[\"guestView\", \"\"], [1, \"app-header\"], [1, \"header-nav\"], [1, \"app-title\"], [\"routerLink\", \"/\"], [1, \"header-actions\"], [4, \"ngIf\", \"ngIfElse\"], [3, \"closeDialog\", 4, \"ngIf\"], [1, \"welcome-message\"], [1, \"btn\", \"btn-logout\", 3, \"click\"], [1, \"btn\", \"btn-login\", 3, \"click\"], [3, \"closeDialog\"]],\n      template: function HeaderComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"header\", 1)(1, \"nav\", 2)(2, \"h1\", 3)(3, \"a\", 4);\n          i0.ɵɵtext(4, \"Property Palace Manager\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(5, \"div\", 5);\n          i0.ɵɵtemplate(6, HeaderComponent_ng_container_6_Template, 5, 2, \"ng-container\", 6);\n          i0.ɵɵpipe(7, \"async\");\n          i0.ɵɵtemplate(8, HeaderComponent_ng_template_8_Template, 2, 0, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵtemplate(10, HeaderComponent_app_login_10_Template, 1, 0, \"app-login\", 7);\n        }\n        if (rf & 2) {\n          const guestView_r6 = i0.ɵɵreference(9);\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(7, 3, ctx.currentUser$))(\"ngIfElse\", guestView_r6);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngIf\", ctx.isLoginOpen);\n        }\n      },\n      dependencies: [i2.NgIf, i3.RouterLink, i4.LoginComponent, i2.AsyncPipe],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["i0","ɵɵelementContainerStart","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","HeaderComponent_ng_container_6_Template_button_click_3_listener","ɵɵrestoreView","_r1","ctx_r1","ɵɵnextContext","ɵɵresetView","logout","ɵɵadvance","ɵɵtextInterpolate2","user_r3","username","role","HeaderComponent_ng_template_8_Template_button_click_0_listener","_r4","openLogin","HeaderComponent_app_login_10_Template_app_login_closeDialog_0_listener","$event","_r5","onLoginDialogClose","HeaderComponent","constructor","authService","isLoginOpen","currentUser$","currentUser","ngOnInit","console","log","loggedIn","ɵɵdirectiveInject","i1","AuthService","selectors","decls","vars","consts","template","HeaderComponent_Template","rf","ctx","ɵɵtemplate","HeaderComponent_ng_container_6_Template","HeaderComponent_ng_template_8_Template","ɵɵtemplateRefExtractor","HeaderComponent_app_login_10_Template","ɵɵproperty","ɵɵpipeBind1","guestView_r6"],"sources":["C:\\Users\\DELL\\Desktop\\prop-palace-manager\\property-listing\\app\\components\\header\\header.component.ts","C:\\Users\\DELL\\Desktop\\prop-palace-manager\\property-listing\\app\\components\\header\\header.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { User } from '../../models/user.model';\nimport { AuthService } from '../../services/auth.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n  currentUser$: Observable<User | null>;\n  isLoginOpen = false;\n\n  constructor(private authService: AuthService) {\n    this.currentUser$ = this.authService.currentUser;\n  }\n\n  ngOnInit(): void {}\n\n  logout(): void {\n    this.authService.logout();\n    // In a real app, you'd show a toast notification here.\n    console.log('Logged out');\n  }\n\n  openLogin(): void {\n    this.isLoginOpen = true;\n  }\n\n  onLoginDialogClose(loggedIn: boolean): void {\n    this.isLoginOpen = false;\n    if (loggedIn) {\n      // In a real app, you'd show a toast notification here.\n      console.log('Logged in');\n    }\n  }\n}\n","<header class=\"app-header\">\n  <nav class=\"header-nav\">\n    <h1 class=\"app-title\">\n      <a routerLink=\"/\">Property Palace Manager</a>\n    </h1>\n    <div class=\"header-actions\">\n      <ng-container *ngIf=\"currentUser$ | async as user; else guestView\">\n        <span class=\"welcome-message\">Welcome, {{ user.username }} ({{ user.role }})</span>\n        <button (click)=\"logout()\" class=\"btn btn-logout\">\n          Logout\n        </button>\n      </ng-container>\n      <ng-template #guestView>\n        <button (click)=\"openLogin()\" class=\"btn btn-login\">\n          Login\n        </button>\n      </ng-template>\n    </div>\n  </nav>\n</header>\n\n<app-login *ngIf=\"isLoginOpen\" (closeDialog)=\"onLoginDialogClose($event)\"></app-login>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}