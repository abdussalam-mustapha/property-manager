{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PropertyFormComponent } from '../property-form/property-form.component';\nimport { Subscription, BehaviorSubject, combineLatest } from 'rxjs';\nimport { switchMap, startWith } from 'rxjs/operators';\nconst ITEMS_PER_PAGE = 6;\nlet PropertyListComponent = class PropertyListComponent {\n  constructor(propertyService, authService) {\n    this.propertyService = propertyService;\n    this.authService = authService;\n    this.searchTerm = new BehaviorSubject('');\n    this.filterType = new BehaviorSubject('all');\n    this.filterLocation = new BehaviorSubject('all');\n    this.sortBy = new BehaviorSubject('name');\n    this.sortOrder = new BehaviorSubject('asc');\n    this.currentPage = new BehaviorSubject(1);\n    this.totalPages = 0;\n    this.viewMode = 'grid';\n    this.isPropertyFormOpen = false;\n    this.editingProperty = null;\n    this.subscriptions = new Subscription();\n    this.currentUser$ = this.authService.currentUser;\n    this.uniqueLocations$ = this.propertyService.getUniqueLocations();\n    this.properties$ = combineLatest([this.searchTerm, this.filterType, this.filterLocation, this.sortBy, this.sortOrder]).pipe(switchMap(([searchTerm, filterType, filterLocation, sortBy, sortOrder]) => this.propertyService.getProperties(searchTerm, filterType, filterLocation, sortBy, sortOrder)));\n    this.paginatedProperties$ = combineLatest([this.properties$, this.currentPage.pipe(startWith(1))]).pipe(switchMap(([properties, currentPage]) => {\n      this.totalPages = Math.ceil(properties.length / ITEMS_PER_PAGE);\n      const startIndex = (currentPage - 1) * ITEMS_PER_PAGE;\n      return new BehaviorSubject(properties.slice(startIndex, startIndex + ITEMS_PER_PAGE));\n    }));\n  }\n  ngOnInit() {}\n  ngOnDestroy() {\n    this.subscriptions.unsubscribe();\n  }\n  onSearch(event) {\n    const value = event.target.value;\n    this.searchTerm.next(value);\n    this.currentPage.next(1);\n  }\n  onFilterTypeChange(value) {\n    this.filterType.next(value);\n    this.currentPage.next(1);\n  }\n  onFilterLocationChange(value) {\n    this.filterLocation.next(value);\n    this.currentPage.next(1);\n  }\n  onSortChange(value) {\n    this.sortBy.next(value);\n  }\n  toggleSortOrder() {\n    this.sortOrder.next(this.sortOrder.value === 'asc' ? 'desc' : 'asc');\n  }\n  goToPage(page) {\n    if (page >= 1 && page <= this.totalPages) {\n      this.currentPage.next(page);\n    }\n  }\n  openPropertyForm(property) {\n    this.editingProperty = property;\n    this.isPropertyFormOpen = true;\n  }\n  onPropertyFormClose(refresh) {\n    this.isPropertyFormOpen = false;\n    this.editingProperty = null;\n    if (refresh) {\n      // This will trigger a refresh of the properties list\n      this.propertyService.properties$.subscribe();\n    }\n  }\n  deleteProperty(id) {\n    if (confirm('Are you sure you want to delete this property?')) {\n      this.propertyService.deleteProperty(id);\n      // In a real app, you'd show a toast notification here.\n      console.log('Property deleted');\n    }\n  }\n  exportToCSV() {\n    this.subscriptions.add(this.properties$.subscribe(properties => {\n      this.propertyService.exportToCSV(properties);\n      // In a real app, you'd show a toast notification here.\n      console.log('Exported to CSV');\n    }));\n  }\n};\nPropertyListComponent = __decorate([Component({\n  selector: 'app-property-list',\n  standalone: true,\n  imports: [CommonModule, RouterModule, PropertyFormComponent],\n  templateUrl: './property-list.component.html',\n  styleUrls: ['./property-list.component.css']\n})], PropertyListComponent);\nexport { PropertyListComponent };","map":{"version":3,"names":["Component","CommonModule","PropertyFormComponent","Subscription","BehaviorSubject","combineLatest","switchMap","startWith","ITEMS_PER_PAGE","PropertyListComponent","constructor","propertyService","authService","searchTerm","filterType","filterLocation","sortBy","sortOrder","currentPage","totalPages","viewMode","isPropertyFormOpen","editingProperty","subscriptions","currentUser$","currentUser","uniqueLocations$","getUniqueLocations","properties$","pipe","getProperties","paginatedProperties$","properties","Math","ceil","length","startIndex","slice","ngOnInit","ngOnDestroy","unsubscribe","onSearch","event","value","target","next","onFilterTypeChange","onFilterLocationChange","onSortChange","toggleSortOrder","goToPage","page","openPropertyForm","property","onPropertyFormClose","refresh","subscribe","deleteProperty","id","confirm","console","log","exportToCSV","add","__decorate","selector","standalone","imports","RouterModule","templateUrl","styleUrls"],"sources":["C:\\Users\\DELL\\Desktop\\prop-palace-manager\\property-listing\\app\\components\\property-list\\property-list.component.ts"],"sourcesContent":["import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PropertyFormComponent } from '../property-form/property-form.component';\nimport { Observable, Subscription, BehaviorSubject, combineLatest } from 'rxjs';\nimport { switchMap, startWith } from 'rxjs/operators';\nimport { Property } from '../../models/property.model';\nimport { User } from '../../models/user.model';\nimport { PropertyService } from '../../services/property.service';\nimport { AuthService } from '../../services/auth.service';\n\nconst ITEMS_PER_PAGE = 6;\n\n@Component({\n  selector: 'app-property-list',\n  standalone: true,\n  imports: [CommonModule, RouterModule, PropertyFormComponent],\n  templateUrl: './property-list.component.html',\n  styleUrls: ['./property-list.component.css']\n})\nexport class PropertyListComponent implements OnInit, OnDestroy {\n  properties$: Observable<Property[]>;\n  paginatedProperties$: Observable<Property[]>;\n  uniqueLocations$: Observable<string[]>;\n  currentUser$: Observable<User | null>;\n\n  searchTerm = new BehaviorSubject<string>('');\n  filterType = new BehaviorSubject<string>('all');\n  filterLocation = new BehaviorSubject<string>('all');\n  sortBy = new BehaviorSubject<string>('name');\n  sortOrder = new BehaviorSubject<'asc' | 'desc'>('asc');\n  currentPage = new BehaviorSubject<number>(1);\n\n  totalPages = 0;\n  viewMode: 'grid' | 'table' = 'grid';\n\n  isPropertyFormOpen = false;\n  editingProperty: Property | null = null;\n\n  private subscriptions = new Subscription();\n\n  constructor(\n    private propertyService: PropertyService,\n    private authService: AuthService\n  ) {\n    this.currentUser$ = this.authService.currentUser;\n    this.uniqueLocations$ = this.propertyService.getUniqueLocations();\n\n    this.properties$ = combineLatest([\n      this.searchTerm,\n      this.filterType,\n      this.filterLocation,\n      this.sortBy,\n      this.sortOrder\n    ]).pipe(\n      switchMap(([searchTerm, filterType, filterLocation, sortBy, sortOrder]) =>\n        this.propertyService.getProperties(searchTerm, filterType, filterLocation, sortBy, sortOrder)\n      )\n    );\n\n    this.paginatedProperties$ = combineLatest([\n      this.properties$,\n      this.currentPage.pipe(startWith(1))\n    ]).pipe(\n      switchMap(([properties, currentPage]) => {\n        this.totalPages = Math.ceil(properties.length / ITEMS_PER_PAGE);\n        const startIndex = (currentPage - 1) * ITEMS_PER_PAGE;\n        return new BehaviorSubject(properties.slice(startIndex, startIndex + ITEMS_PER_PAGE));\n      })\n    );\n  }\n\n  ngOnInit(): void {}\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  onSearch(event: Event): void {\n    const value = (event.target as HTMLInputElement).value;\n    this.searchTerm.next(value);\n    this.currentPage.next(1);\n  }\n\n  onFilterTypeChange(value: string): void {\n    this.filterType.next(value);\n    this.currentPage.next(1);\n  }\n\n  onFilterLocationChange(value: string): void {\n    this.filterLocation.next(value);\n    this.currentPage.next(1);\n  }\n\n  onSortChange(value: string): void {\n    this.sortBy.next(value);\n  }\n\n  toggleSortOrder(): void {\n    this.sortOrder.next(this.sortOrder.value === 'asc' ? 'desc' : 'asc');\n  }\n\n  goToPage(page: number): void {\n    if (page >= 1 && page <= this.totalPages) {\n      this.currentPage.next(page);\n    }\n  }\n\n  openPropertyForm(property: Property | null): void {\n    this.editingProperty = property;\n    this.isPropertyFormOpen = true;\n  }\n\n  onPropertyFormClose(refresh: boolean): void {\n    this.isPropertyFormOpen = false;\n    this.editingProperty = null;\n    if (refresh) {\n      // This will trigger a refresh of the properties list\n      this.propertyService.properties$.subscribe();\n    }\n  }\n\n  deleteProperty(id: string): void {\n    if (confirm('Are you sure you want to delete this property?')) {\n      this.propertyService.deleteProperty(id);\n      // In a real app, you'd show a toast notification here.\n      console.log('Property deleted');\n    }\n  }\n\n  exportToCSV(): void {\n    this.subscriptions.add(\n      this.properties$.subscribe(properties => {\n        this.propertyService.exportToCSV(properties);\n        // In a real app, you'd show a toast notification here.\n        console.log('Exported to CSV');\n      })\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}